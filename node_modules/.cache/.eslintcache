[{"/home/rami/Desktop/intership/src/index.js":"1","/home/rami/Desktop/intership/src/App.js":"2","/home/rami/Desktop/intership/src/services/AuthenticationService.js":"3","/home/rami/Desktop/intership/src/components/Login.js":"4","/home/rami/Desktop/intership/src/components/board-user.component.js":"5","/home/rami/Desktop/intership/src/components/home.component.js":"6","/home/rami/Desktop/intership/src/components/forgot-password.js":"7","/home/rami/Desktop/intership/src/components/Register.js":"8","/home/rami/Desktop/intership/src/components/addCertification.js":"9","/home/rami/Desktop/intership/src/components/addUser.js":"10","/home/rami/Desktop/intership/src/components/profile.component.js":"11","/home/rami/Desktop/intership/src/components/board-admin.component.js":"12","/home/rami/Desktop/intership/src/components/search.js":"13","/home/rami/Desktop/intership/src/components/SearchProfil.js":"14","/home/rami/Desktop/intership/src/services/certificateService.js":"15","/home/rami/Desktop/intership/src/services/UserService.js":"16","/home/rami/Desktop/intership/src/common/with-router.js":"17","/home/rami/Desktop/intership/src/services/AuthHeader.js":"18"},{"size":304,"mtime":1679095688388,"results":"19","hashOfConfig":"20"},{"size":4325,"mtime":1679927620397,"results":"21","hashOfConfig":"20"},{"size":4099,"mtime":1688719044794,"results":"22","hashOfConfig":"20"},{"size":4051,"mtime":1679095688404,"results":"23","hashOfConfig":"20"},{"size":5651,"mtime":1693758844537,"results":"24","hashOfConfig":"20"},{"size":560,"mtime":1679095688404,"results":"25","hashOfConfig":"20"},{"size":4332,"mtime":1679659020178,"results":"26","hashOfConfig":"20"},{"size":10080,"mtime":1681463211078,"results":"27","hashOfConfig":"20"},{"size":3799,"mtime":1679095688388,"results":"28","hashOfConfig":"20"},{"size":9994,"mtime":1681463177413,"results":"29","hashOfConfig":"20"},{"size":4849,"mtime":1693764251154,"results":"30","hashOfConfig":"20"},{"size":8184,"mtime":1693744114427,"results":"31","hashOfConfig":"20"},{"size":2194,"mtime":1681464828023,"results":"32","hashOfConfig":"20"},{"size":7660,"mtime":1688718906911,"results":"33","hashOfConfig":"20"},{"size":526,"mtime":1688719070414,"results":"34","hashOfConfig":"20"},{"size":3464,"mtime":1688718723939,"results":"35","hashOfConfig":"20"},{"size":376,"mtime":1679095688412,"results":"36","hashOfConfig":"20"},{"size":322,"mtime":1679095688408,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fhtyd",{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/rami/Desktop/intership/src/index.js",[],[],"/home/rami/Desktop/intership/src/App.js",["95","96"],[],"import React, { Component } from \"react\";\nimport { Routes, Route, Link } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport AuthService from \"./services/AuthenticationService\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Home from \"./components/home.component\";\nimport Profile from \"./components/profile.component\";\nimport BoardUser from \"./components/board-user.component\";\nimport BoardAdmin from \"./components/board-admin.component\";\nimport ForgotPassword from \"./components/forgot-password\";\nimport AddUser from \"./components/addUser\";\nimport AddCertificateForm from \"./components/addCertification\";\nimport SearchBar from \"./components/search\";\nimport SearchProfile from \"./components/SearchProfil\";\nimport imageSrc from './images/LOGO_0003_WHITE-&-ORANGE.png';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n\n    this.state = {\n      showAdminBoard: false,\n      currentUser: undefined,\n    };\n  }\n\n  componentDidMount() {\n    const user = AuthService.getCurrentUser();\n  \n    if (user && user.role) {\n      this.setState({\n        currentUser: user,\n        showAdminBoard: user.role.includes(\"ADMIN\"),\n      });\n    }\n  }\n  logOut() {\n    AuthService.logout();\n    this.setState({\n      showAdminBoard: false,\n      currentUser: undefined,\n    });\n  }\n\n  render() {\n    const { currentUser, showAdminBoard} = this.state;\n  \n    return (\n      <div>\n        <nav className=\"navbar navbar-expand \">\n          <Link to={\"/\"} className=\"navbar-brand\">\n            <img src={imageSrc} alt=\"OneTech BS \" style={{ width: '100%', height: '50px' }} />\n          </Link>\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/home\"} className=\"nav-link\" style={{ color: \"#f08700\" }}>\n                Home\n              </Link>\n            </li>\n            {showAdminBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/admin\"} className=\"nav-link\">\n                  User Management\n                </Link>\n              </li>\n            )}\n            {currentUser && (\n              <li className=\"nav-item\">\n                <Link to={\"/user\"} className=\"nav-link\">\n                  Certificate\n                </Link>\n              </li>\n            )}\n          </div>\n          {currentUser ? (\n            <div className=\"navbar-nav ml-auto\">\n              <Link to={\"/search-profile?email=${searchText}\"} className=\"nav-link\">\n                  Search \n                </Link>\n              <li className=\"nav-item\">\n                <Link to={\"/profile\"} className=\"nav-link\">\n                  {currentUser.firstname} {currentUser.lastname}\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <a href=\"/login\" className=\"nav-link\" onClick={this.logOut}>\n                  Logout\n                </a>\n              </li>\n            </div>\n          ) : (\n            <div className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/login\"} className=\"nav-link\">\n                  Login\n                </Link>\n              </li>\n  \n              <li className=\"nav-item\">\n                <Link to={\"/register\"} className=\"nav-link\">\n                  Sign Up\n                </Link>\n              </li>\n            </div>\n          )}\n        </nav>\n  \n        <div className=\"container mt-3\">\n          <Routes>\n            <Route path=\"/\" element={<Home/>} />\n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/register\" element={<Register />} />\n            <Route path=\"/Profile\" element={<Profile />} />\n            <Route path=\"/Forgot-Password\" element={<ForgotPassword />} />\n            <Route path=\"/Home\" element={<Home />} />\n            <Route path=\"/admin\" element={<BoardAdmin />} />\n            <Route path=\"/adduser\" element={<AddUser />} />\n            <Route path=\"/user\" element={<BoardUser />} />\n            <Route path=\"/addCertification\" element={<AddCertificateForm />} />\n            <Route path=\"/search-profile\" element={<SearchProfile/>} />\n          </Routes>\n        </div>\n      </div>\n    );\n  }\n}  \nexport default App;","/home/rami/Desktop/intership/src/services/AuthenticationService.js",[],[],"/home/rami/Desktop/intership/src/components/Login.js",[],[],"/home/rami/Desktop/intership/src/components/board-user.component.js",["97","98","99","100","101"],[],"/home/rami/Desktop/intership/src/components/home.component.js",[],[],"/home/rami/Desktop/intership/src/components/forgot-password.js",[],[],"/home/rami/Desktop/intership/src/components/Register.js",[],[],"/home/rami/Desktop/intership/src/components/addCertification.js",[],[],"/home/rami/Desktop/intership/src/components/addUser.js",[],[],"/home/rami/Desktop/intership/src/components/profile.component.js",[],[],"/home/rami/Desktop/intership/src/components/board-admin.component.js",["102","103","104"],[],"/home/rami/Desktop/intership/src/components/search.js",["105"],[],"import React, { useState } from \"react\";\nimport { useNavigate } from 'react-router-dom';\n\nfunction SearchBar(props) {\n  const [searchText, setSearchText] = useState(\"\");\n  const [searchType, setSearchType] = useState(\"\");\n  const [searchPerformed, setSearchPerformed] = useState(false);\n  const navigate = useNavigate();\n\n  const handleSearch = () => {\n    if (props.onSearch) {\n      props.onSearch(searchText,searchType);\n      setSearchPerformed(true);\n    }\n    navigate(`/search-profile?${searchType}=${searchText}`);\n  };\n  const handleSearchTypeChange = (event) => {\n    setSearchType(event.target.value);\n    if (props.onSearchTypeChange) {\n      props.onSearchTypeChange(event);\n    }\n  };\n  \n  return (\n    <div className=\"navbar-nav ml-auto\">\n      <form className=\"form-inline my-2 my-lg-0 mx-auto\" onSubmit={(e) => {e.preventDefault(); handleSearch();}}>\n        <input\n          className=\"form-control mr-sm-2\"\n          type=\"search\"\n          placeholder=\"Search\"\n          aria-label=\"Search\"\n          value={searchText}\n          onChange={(e) => setSearchText(e.target.value)}\n        />\n        <div className=\"form-check form-check-inline\">\n        <input \n            className=\"form-check-input\" \n            type=\"radio\" \n            name=\"searchType\" \n            id=\"searchByEmail\" \n            value=\"email\"\n            checked={searchType === \"email\"}\n            onChange={handleSearchTypeChange}\n          />\n          <label className=\"form-check-label\" htmlFor=\"searchByEmail\">Search by Email</label>\n        </div>\n        <div className=\"form-check form-check-inline\">\n        <input \n            className=\"form-check-input\" \n            type=\"radio\" \n            name=\"searchType\" \n            id=\"searchByCertificate\" \n            value=\"certificate\"\n            checked={searchType === \"certificate\"}\n            onChange={handleSearchTypeChange}\n        />\n\n          <label className=\"form-check-label\" htmlFor=\"searchByCertificate\">Search by Certificate</label>\n        </div>\n        <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">\n          Search\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default SearchBar;\n","/home/rami/Desktop/intership/src/components/SearchProfil.js",["106","107"],[],"import React, { useState, useEffect } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport UserService from \"../services/UserService\";\nimport SearchBar from \"./search\";\nimport axios from 'axios';\nconst API_URL = process.env.REACT_APP_API_URL;\nfunction SearchProfile() {\n  const [searchText, setSearchText] = useState(\"\");\n  const [redirect, setRedirect] = useState(\"\");\n  const [userReady, setUserReady] = useState(false);\n  const [searchuser, setsearchuser] = useState({});\n  const [certificates, setCertificates] = useState([]);\n  const [documents, setDocuments] = useState([]);\n  const [photo, setPhoto] = useState(\"\");\n  const [showTable, setShowTable] = useState(true);\n  const [users, setUsers] = useState([]);\n  const [searchType, setSearchType] = useState(\"\");\n  const [UserList , setUserList] = useState([]);\n  const [photoUrl, setPhotoUrl] = useState(null);\n  const [searchPerformed, setSearchPerformed] = useState(false);\n\n  const handleSearch = async () => {\n    try {\n      setUserList([]);\n      let response;\n      if (searchType === \"email\") {\n        response = await UserService.getUserProfile(searchText);\n        const user = response.data;\n        const userdocuments = user.documents || [];\n        setsearchuser(user);\n        setCertificates(user.certificates);\n        setDocuments(userdocuments)\n        setUserReady(true);\n        setShowTable(false);\n        setPhoto(user.photo);\n      } else if (searchType === \"certificate\") {\n        response = await UserService.getUsersByCertificate(searchText);\n        const users = response;\n        const emails = users.map(user => user);\n        setUserList(emails);\n        setShowTable(false);\n        setUserReady(false);\n        setsearchuser(null);\n        setCertificates(null);\n        setDocuments(null);\n      }\n    } catch (error) {\n      console.error(error);\n      setRedirect(null);\n      setShowTable(true);\n    }\n  };\n  \n  const loadUsers = async () => {\n    const userString = localStorage.getItem('user');\n    const user = JSON.parse(userString);\n    const token = user.token;\n    const config = {\n      headers: { Authorization: `Bearer ${token}` }\n    };\n    try {\n      const result = await axios.get(API_URL + `/user`, config);\n      setUsers(result.data);\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  }\n  const handleSearchTypeChange = (event) => {\n    setSearchType(event.target.value);\n  };\n\n  useEffect(() => {\n    loadUsers();\n  }, []);\n\n\n  useEffect(() => {\n    if (searchText) {\n      handleSearch(searchText);\n    }\n    else {\n      setShowTable(true);\n    }\n  }, [searchText,searchType]);\n\n  useEffect(() => {\n    async function fetchData() {\n      if (searchuser) {\n        const photoData = await UserService.getUserPhoto(searchuser.email);\n        const photoUrl = URL.createObjectURL(photoData);\n        setPhotoUrl(photoUrl);\n      }\n    }\n    fetchData();\n  }, [searchuser]);\n  useEffect(() => {\n    if (searchuser && !Object.keys(searchuser).length) {\n      setSearchPerformed(true);\n    }\n  }, [searchuser]);\n    \n\n  const renderUserList = () => {\n    if (UserList.length === 0 && searchPerformed) {\n      return (\n        <div className=\"no-users-found\">\n        <h2>No Users Found</h2>\n        <p>We couldn't find any users with this certificate.</p>\n        <p>Please double-check the certificate information and try again.</p>\n      </div>\n      );\n    } else if (UserList.length > 0) {\n      return (\n        <table className=\"centered-table \">\n          <thead>\n            <tr>\n              <th style={{ color: \"#f08700\" }}>ID</th>\n              <th>Email</th>\n              <th>Firstname</th>\n              <th>Lastname</th>\n              <th>Experience</th>\n              <th>ExpirationDate</th>\n            </tr>\n          </thead>\n          <tbody>\n            {UserList.map((userData, index) => {\n              const [email, firstname, lastname,experience,expirationDate] = userData.split(\", \");\n              return (\n                <tr key={index}>\n                  <td>{index + 1}</td>\n                  <td>{email}</td>\n                  <td>{firstname}</td>\n                  <td>{lastname}</td>\n                  <td>{experience}</td>\n                  <td>{expirationDate}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      );\n    } else {\n      return null;\n    }\n  };  \n\n  const renderTable = () => {\n    if (!showTable) {\n      return null;\n    }\n    const sortedUsers = users.sort((a, b) => b.certificates.length - a.certificates.length);\n  \n    return (\n      <table className=\"centered-table\">\n        <thead>\n          <tr>\n            <th style={{ color: \"#f08700\" }}>Email</th>\n            <th>Number of Certificates</th>\n          </tr>\n        </thead>\n        <tbody>\n        {sortedUsers.map((user, index) => (\n          <tr key={user.email + \"-\" + index}>\n            <td>{user.email}</td>\n            <td>{user.certificates.length}</td>\n          </tr>\n        ))}\n        </tbody>\n      </table>\n    );\n  };\n  \n  const renderProfile = () => {\n    if (redirect) {\n      return <Navigate to={redirect} />;\n    }\n    if (!searchuser && searchPerformed) {\n      return (\n        <div className=\"no-users-found\">\n          <h2>No User Found</h2>\n          <p>We couldn't find a user with that information.</p>\n          <p>Please double-check and try again.</p>\n        </div>\n      );\n    }    \n    return (\n      <div className=\"col-md-12\">\n        {userReady && (\n          <div className=\"card card-container1\">\n            <div className=\"text-center\">\n              {photoUrl && \n                <div className=\"rounded-circle-container\">\n                  <img src={photoUrl} alt=\"Profile\" className=\"rounded-circle\" />\n                </div>\n              }\n            </div>\n    \n          <header className=\"jumbotron\" style={{ backgroundColor: \"#00396b\" ,fontFamily: \"Montserrat\" }}>\n            <h3 style={{ color: \"white\",textAlign: \"center\" }}>Profile of Mr/Miss {searchuser.firstname} {searchuser.lastname}</h3>\n          </header>\n          <div style={{ fontFamily: \"Montserrat\" }}>\n          <h3>Infomations:</h3>\n            <ul>\n          <li><h5><strong>First Name:</strong> {searchuser.firstname}</h5> </li>\n          <li><h5><strong>Email:</strong> {searchuser.email}</h5></li>\n          <li><h5><strong>Authorities:</strong> {searchuser.role}</h5></li>\n          </ul>\n          </div>\n          <hr />\n          <div style={{ fontFamily: \"Montserrat\" }}>\n            <h3>Certificates:</h3>\n            <ul>\n              {certificates.map(certificate => (\n                <li key={certificate.id}>\n                  {certificate.name} - {certificate.description} - {certificate.expirationDate}\n                </li>\n              ))}\n            </ul>\n          </div>\n          <div style={{ fontFamily: \"Montserrat\" }}>\n            <h3>Documents:</h3>\n              <ul>\n                {documents.map(document => (\n                  <li key={document.id}>\n                    <a href={API_URL + `/user/${searchuser.email}/documents/${document.id}`} target=\"_blank\" rel=\"noopener noreferrer\">{document.name}</a>\n                  </li>\n                ))}\n              </ul>\n          </div>\n        </div>\n      )}\n    </div>\n    );\n};\n\n  return (\n    <div>\n      <SearchBar onSearch={setSearchText} searchType={searchType} onSearchTypeChange={handleSearchTypeChange}/>\n      {renderTable()}\n      {searchType === \"email\" &&  searchPerformed && renderProfile()}\n      {searchType === \"certificate\" &&  searchPerformed  && renderUserList()}\n    </div>\n    \n  );\n}\n\nexport default SearchProfile;","/home/rami/Desktop/intership/src/services/certificateService.js",[],[],"/home/rami/Desktop/intership/src/services/UserService.js",[],[],"/home/rami/Desktop/intership/src/common/with-router.js",[],[],"/home/rami/Desktop/intership/src/services/AuthHeader.js",[],[],{"ruleId":"108","severity":1,"message":"109","line":15,"column":8,"nodeType":"110","messageId":"111","endLine":15,"endColumn":17},{"ruleId":"112","severity":1,"message":"113","line":80,"column":25,"nodeType":"114","messageId":"115","endLine":80,"endColumn":62},{"ruleId":"108","severity":1,"message":"116","line":13,"column":10,"nodeType":"110","messageId":"111","endLine":13,"endColumn":20},{"ruleId":"108","severity":1,"message":"117","line":13,"column":22,"nodeType":"110","messageId":"111","endLine":13,"endColumn":35},{"ruleId":"108","severity":1,"message":"118","line":14,"column":10,"nodeType":"110","messageId":"111","endLine":14,"endColumn":24},{"ruleId":"108","severity":1,"message":"119","line":14,"column":26,"nodeType":"110","messageId":"111","endLine":14,"endColumn":43},{"ruleId":"108","severity":1,"message":"120","line":84,"column":13,"nodeType":"110","messageId":"111","endLine":84,"endColumn":21},{"ruleId":"108","severity":1,"message":"117","line":37,"column":22,"nodeType":"110","messageId":"111","endLine":37,"endColumn":35},{"ruleId":"108","severity":1,"message":"121","line":38,"column":10,"nodeType":"110","messageId":"111","endLine":38,"endColumn":23},{"ruleId":"108","severity":1,"message":"122","line":127,"column":15,"nodeType":"110","messageId":"111","endLine":127,"endColumn":21},{"ruleId":"108","severity":1,"message":"123","line":7,"column":10,"nodeType":"110","messageId":"111","endLine":7,"endColumn":25},{"ruleId":"108","severity":1,"message":"124","line":14,"column":10,"nodeType":"110","messageId":"111","endLine":14,"endColumn":15},{"ruleId":"125","severity":1,"message":"126","line":85,"column":6,"nodeType":"127","endLine":85,"endColumn":29,"suggestions":"128"},"no-unused-vars","'SearchBar' is defined but never used.","Identifier","unusedVar","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'searchTerm' is assigned a value but never used.","'setSearchTerm' is assigned a value but never used.","'filteredCertif' is assigned a value but never used.","'setFilteredCertif' is assigned a value but never used.","'response' is assigned a value but never used.","'filteredUsers' is assigned a value but never used.","'result' is assigned a value but never used.","'searchPerformed' is assigned a value but never used.","'photo' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleSearch'. Either include it or remove the dependency array.","ArrayExpression",["129"],{"desc":"130","fix":"131"},"Update the dependencies array to be: [handleSearch, searchText, searchType]",{"range":"132","text":"133"},[2608,2631],"[handleSearch, searchText, searchType]"]